// <auto-generated />
using System;
using CoreApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreApp.Infrastructure.Data.Migrations;

[DbContext(typeof(CoreAppDbContext))]
partial class CoreAppDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "9.0.6")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("CoreApp.Domain.Entities.RefreshToken", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<DateTime>("Expires")
                    .HasColumnType("datetime2");

                b.Property<string>("IpAddress")
                    .HasColumnType("nvarchar(max)");

                b.Property<bool>("IsRevoked")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("bit")
                    .HasDefaultValue(false);

                b.Property<string>("ReplacedByTokenHash")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("SessionId")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("TokenHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("UserAgent")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("UserId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("Id");

                b.HasIndex("UserId");

                b.ToTable("RefreshTokens");
            });

        modelBuilder.Entity("CoreApp.Domain.Entities.Role", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasMaxLength(50)
                    .HasColumnType("nvarchar(50)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.HasKey("Id");

                b.ToTable("Roles");
            });

        modelBuilder.Entity("CoreApp.Domain.Entities.User", b =>
            {
                b.Property<Guid>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Email")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("nvarchar(200)");

                b.Property<string>("PasswordHash")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<DateTime?>("UpdatedAt")
                    .HasColumnType("datetime2");

                b.Property<string>("Username")
                    .IsRequired()
                    .HasMaxLength(100)
                    .HasColumnType("nvarchar(100)");

                b.HasKey("Id");

                b.ToTable("Users");
            });

        modelBuilder.Entity("RoleUser", b =>
            {
                b.Property<Guid>("RolesId")
                    .HasColumnType("uniqueidentifier");

                b.Property<Guid>("UsersId")
                    .HasColumnType("uniqueidentifier");

                b.HasKey("RolesId", "UsersId");

                b.HasIndex("UsersId");

                b.ToTable("RoleUser");
            });

        modelBuilder.Entity("CoreApp.Domain.Entities.RefreshToken", b =>
            {
                b.HasOne("CoreApp.Domain.Entities.User", "User")
                    .WithMany("RefreshTokens")
                    .HasForeignKey("UserId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("User");
            });

        modelBuilder.Entity("RoleUser", b =>
            {
                b.HasOne("CoreApp.Domain.Entities.Role", null)
                    .WithMany()
                    .HasForeignKey("RolesId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("CoreApp.Domain.Entities.User", null)
                    .WithMany()
                    .HasForeignKey("UsersId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

        modelBuilder.Entity("CoreApp.Domain.Entities.User", b =>
            {
                b.Navigation("RefreshTokens");
            });
#pragma warning restore 612, 618
    }
}
